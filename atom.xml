<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Dev Blog]]></title>
  <link href="scottr.me/atom.xml" rel="self"/>
  <link href="scottr.me/"/>
  <updated>2013-09-10T12:38:45+01:00</updated>
  <id>scottr.me/</id>
  <author>
    <name><![CDATA[Scott Roberts]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Multiple Rounded Corners With UIBezierPath]]></title>
    <link href="scottr.me/blog/2013/09/05/multiple-rounded-corners-with-uibezierpath/"/>
    <updated>2013-09-05T17:23:00+01:00</updated>
    <id>scottr.me/blog/2013/09/05/multiple-rounded-corners-with-uibezierpath</id>
    <content type="html"><![CDATA[<p>Sometime ago I ran into a problem where I wanted to round one side of a UIView but leave the other size square. I had a good search around the internet and could not find a solution that was not crazy complicated than it should have been. Really all I wanted to do was round more than one corner but not all corners.</p>

<h2>The options I thought I had was</h2>

<ul>
<li>UIRectCornerTopLeft</li>
<li>UIRectCornerTopRight</li>
<li>UIRectCornerBottomLeft</li>
<li>UIRectCornerBottomRight</li>
<li>UIRectCornerAllCorners</li>
</ul>


<p>But what if I wanted UIRectCornerTopLeft &amp; UIRectCornerTopRight To me there was no way I could only select one of these options, I did try the following which resulted in a compiler error.</p>

<figure class='code'><figcaption><span>Incorrect Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                          <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerTopRight</span> <span class="o">|</span> <span class="n">UIRectCornerTopLeft</span><span class="p">,</span> <span class="n">UIRectCornerBottomRight</span>
</span><span class='line'>                               <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span><span class="mf">10.0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p>So I went off and tried crazy custom UIBezierPath to try and draw my own and not using bezierPathWithRoundedRect. After much failure I randomly tried the Wonderful &lsquo;|&rsquo; character knowing sometimes I can chain options using this character.</p>

<h2>Well Look at that</h2>

<p>It worked! I had no ideas you could use &lsquo;|&rsquo; to add more than one option which could be a valuable piece of information in the future when also using methods that allow me to pass in enum options.</p>

<h2>Some examples</h2>

<p><img src="http://scottr.me/images/postImages/UIBiezerPathImage.png" width="250" height="350" title="UIBiezerPathImage" ></p>

<ul>
<li>Pink/Purple box = View 1</li>
<li>Green box  = View 2</li>
<li>Blue box = View 3</li>
<li>Orange box = View 4</li>
<li>Red box= View 5</li>
</ul>


<p>So View 1 is set like the following.</p>

<figure class='code'><figcaption><span>View 1 Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//set view 1</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">UIBezierPath</span> <span class="o">*</span><span class="p">)</span><span class="nf">roundTopLeftOfView:</span><span class="p">(</span><span class="n">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span><span class="p">{</span>
</span><span class='line'><span class="c1">// Create the path (with only the top-left corner rounded)</span>
</span><span class='line'><span class="k">return</span> <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                                               <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerTopLeft</span>
</span><span class='line'>                                                     <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">)];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">maskLayerView1</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAShapeLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'><span class="n">maskLayerView1</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">_view1</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'><span class="n">maskLayerView1</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">roundTopLeftOfView:</span><span class="n">_view1</span><span class="p">].</span><span class="n">CGPath</span><span class="p">;</span>
</span><span class='line'><span class="n">_view1</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">mask</span> <span class="o">=</span> <span class="n">maskLayerView1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Some different methods you could call are</p>

<p><strong>Round just the top right of a view</strong></p>

<figure class='code'><figcaption><span>View 2 Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>      <span class="k">return</span>  <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                                                     <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerTopRight</span>
</span><span class='line'>                                                           <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Round just the whole top of a view</strong></p>

<figure class='code'><figcaption><span>View 3 Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="k">return</span>  <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                                  <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerTopRight</span> <span class="o">|</span> <span class="n">UIRectCornerTopLeft</span>
</span><span class='line'>                                        <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">)];</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Round just the top and bottom right of a view</strong></p>

<figure class='code'><figcaption><span>View 4 Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">return</span>  <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                              <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerTopRight</span> <span class="o">|</span> <span class="n">UIRectCornerTopLeft</span> <span class="o">|</span> <span class="n">UIRectCornerBottomRight</span>
</span><span class='line'>                                    <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Round everything!</strong></p>

<figure class='code'><figcaption><span>View 5 Code Block</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="k">return</span>  <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>                                  <span class="nl">byRoundingCorners:</span><span class="n">UIRectCornerAllCorners</span>
</span><span class='line'>                                        <span class="nl">cornerRadii:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p>So there we go a very simple solution to a problem that took me way too long to solve, maybe it might help someone else somewhere.</p>

<p>Thanks for reading,
You can follow me on twitter at <a href="https://twitter.com/scottmkroberts">@scottmkroberts</a>  or App.Net <a href="https://alpha.app.net/scottr">@scottr</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="scottr.me/blog/2013/08/19/hello-world/"/>
    <updated>2013-08-19T13:34:00+01:00</updated>
    <id>scottr.me/blog/2013/08/19/hello-world</id>
    <content type="html"><![CDATA[<h3>Blog coming soon.</h3>
]]></content>
  </entry>
  
</feed>
